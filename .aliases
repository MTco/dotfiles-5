# Start and stop CrashPlan.
alias crashplan-start="sudo launchctl load /Library/LaunchDaemons/com.crashplan.engine.plist"
alias crashplan-stop="sudo launchctl unload /Library/LaunchDaemons/com.crashplan.engine.plist"

# Rebuild the Launch Services database and get rid of duplicates in the
# "Open With" submenu.
alias fixopenwith='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user'

# Don't wrap lines by default in less.
alias less="less -S"

# Detect which `ls` flavor to use.
if ls --color > /dev/null 2>&1; then
    # GNU
    colorflag="--color"
else
    # BSD
    colorflag="-G"
fi

# List files colorized in long format.
alias ll="ls -l ${colorflag}"

# List files colorized in column format.
alias ls="ls ${colorflag}"

# Start an HTTP server on port 3000 in the current directory.
alias serve="thin -R ~/src/scripts/serve.ru start"

# Rsync shortcuts.
alias sync-src-from-ghostwheel="rsync -avzhu --delete-during --executability ghostwheel.local:/Users/rgrove/src/ ~/src/"
alias sync-src-to-ghostwheel="rsync -avzhu --delete-during --executability ~/src/ ghostwheel.local:/Users/rgrove/src/"
alias sync-src-from-nostromo="rsync -avzhu --delete-during --executability nostromo.local:/Users/rgrove/src/ ~/src/"
alias sync-src-to-nostromo="rsync -avzhu --delete-during --executability ~/src/ nostromo.local:/Users/rgrove/src/"
alias sync-src-from-sulaco="rsync -avzhu --delete-during --executability sulaco.local:/Users/rgrove/src/ ~/src/"
alias sync-src-to-sulaco="rsync -avzhu --delete-during --executability ~/src/ sulaco.local:/Users/rgrove/src/"

# Nice WHOIS lookups.
alias whois="whois -h whois-servers.net"

# Convert videos to animated GIFs!
gifify() {
  if [[ -n "$1" ]]; then
    if [[ $2 == '--good' ]]; then
      ffmpeg -i $1 -r 10 -vcodec png out-static-%05d.png
      time convert -verbose +dither -layers Optimize -resize 600x600\> out-static*.png  GIF:- | gifsicle --colors 128 --delay=5 --loop --optimize=3 --multifile - > $1.gif
      rm out-static*.png
    else
      ffmpeg -i $1 -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > $1.gif
    fi
  else
    echo "proper usage: gifify <input_movie.mov>. You DO need to include extension."
  fi
}
